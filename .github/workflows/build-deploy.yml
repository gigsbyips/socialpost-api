name: Build and deploy socialpost fast api.

on: [push, pull_request]

jobs:
  build-api:
    runs-on: ubuntu-latest
    environment:
      name: Test
    env:
      DB_HOST: ${{secrets.DB_HOST}}
      DB_PORT: ${{secrets.DB_PORT}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_USER_NAME: ${{secrets.DB_USER_NAME}}
      DB_PWD: ${{secrets.DB_PWD}}
      SIGN_KEY: ${{secrets.SIGN_KEY}}
      SIGN_ALGORITHM: ${{secrets.SIGN_ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTE: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTE}}
    # Run Posgtes DB as another container.
    # services:
    #   postgres:
    #     image: postgres
    #     env:
    #       POSTGRES_PASSWORD: ${{secrets.DB_PWD}}
    #       POSTGRES_DB: ${{secrets.DB_NAME}}
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    # Deployment steps.
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.5"
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install Dependencies
        run: pip install -r requirements.txt
      # Perform Testing.
      # - name: run integration test
      #   run: |
      #     pip install pytest
      #     pytest
      # Docker Image Preparation.
      - name: Connect to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Image and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/socialpost-api:latest
          cache-from: type=local,src=/tmp/.buildx-cache # Cache set up to avoid repeated image pulls.
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image Digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  ##################### Deployment #############
  deploy-api:
    runs-on: ubuntu-latest
    needs: [build-api]
    environment:
      name: Test
    env:
      # APP Secrets.
      DB_HOST: ${{secrets.DB_HOST}}
      DB_PORT: ${{secrets.DB_PORT}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_USER_NAME: ${{secrets.DB_USER_NAME}}
      DB_PWD: ${{secrets.DB_PWD}}
      SIGN_KEY: ${{secrets.SIGN_KEY}}
      SIGN_ALGORITHM: ${{secrets.SIGN_ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTE: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTE}}
      # DB Secrets.
      POSTGRES_PASSWORD: ${{secrets.DB_PWD}}
      POSTGRES_DB: ${{secrets.DB_NAME}}  
    steps:  
      - name: Connect to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Deploy using docker compose
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "./docker-compose.yml"
